// <auto-generated />
using System;
using MOS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MOS.Data.Migrations
{
    [DbContext(typeof(MosDbContext))]
    partial class MosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MOS.Data.Entity.Admin", b =>
                {
                    b.Property<int>("AdminNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminNumber"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminNumber");

                    b.HasIndex("AdminNumber")
                        .IsUnique();

                    b.ToTable("Admin", "dbo");

                    b.HasData(
                        new
                        {
                            AdminNumber = 1,
                            Email = "ali.ilman@akbank.com",
                            FirstName = "Ali",
                            LastName = "İlman",
                            Password = "Admin",
                            UserId = 1,
                            UserName = "aliilman"
                        },
                        new
                        {
                            AdminNumber = 2,
                            Email = "veli.liman@akbank.com",
                            FirstName = "Veli",
                            LastName = "liman",
                            Password = "Admin",
                            UserId = 2,
                            UserName = "veliliman"
                        });
                });

            modelBuilder.Entity("MOS.Data.Entity.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<int>("AdminNumber")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int?>("DeciderAdminNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExpenseAmount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("ExpenseCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceImageFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalNumber")
                        .HasColumnType("int");

                    b.HasKey("ExpenseId");

                    b.HasIndex("AdminNumber");

                    b.HasIndex("ExpenseId")
                        .IsUnique();

                    b.HasIndex("PersonalNumber");

                    b.ToTable("Expense", "dbo");
                });

            modelBuilder.Entity("MOS.Data.Entity.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<decimal>("PaymentAmount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("ExpenseId")
                        .IsUnique();

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.ToTable("Payment", "dbo");
                });

            modelBuilder.Entity("MOS.Data.Entity.Personal", b =>
                {
                    b.Property<int>("PersonalNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalNumber"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonalNumber");

                    b.HasIndex("PersonalNumber")
                        .IsUnique();

                    b.ToTable("Personal", "dbo");

                    b.HasData(
                        new
                        {
                            PersonalNumber = 1,
                            Email = "ferdi.kadi@akbank.com",
                            FirstName = "Ferdi",
                            IBAN = "12345678981234456798",
                            LastName = "Kadi",
                            Password = "personal",
                            UserId = 3,
                            UserName = "ferdikadi"
                        },
                        new
                        {
                            PersonalNumber = 2,
                            Email = "Arda.gul@akbank.com",
                            FirstName = "Arda",
                            IBAN = "56412345678981234456798",
                            LastName = "Gul",
                            Password = "personal",
                            UserId = 4,
                            UserName = "ardagul"
                        },
                        new
                        {
                            PersonalNumber = 3,
                            Email = "sebastian.simanski@akbank.com",
                            FirstName = "Sebastian",
                            IBAN = "1233456789856451234456798",
                            LastName = "simanski",
                            Password = "personal",
                            UserId = 5,
                            UserName = "sebastiansimanski"
                        },
                        new
                        {
                            PersonalNumber = 4,
                            Email = "edin.ceko@akbank.com",
                            FirstName = "Edin",
                            IBAN = "12345678981541654234456798",
                            LastName = "Ceko",
                            Password = "personal",
                            UserId = 6,
                            UserName = "edinceko"
                        });
                });

            modelBuilder.Entity("MOS.Data.Entity.Expense", b =>
                {
                    b.HasOne("MOS.Data.Entity.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOS.Data.Entity.Personal", "Personal")
                        .WithMany("Expense")
                        .HasForeignKey("PersonalNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("MOS.Data.Entity.Payment", b =>
                {
                    b.HasOne("MOS.Data.Entity.Expense", "Expense")
                        .WithOne("Payment")
                        .HasForeignKey("MOS.Data.Entity.Payment", "ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("MOS.Data.Entity.Expense", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MOS.Data.Entity.Personal", b =>
                {
                    b.Navigation("Expense");
                });
#pragma warning restore 612, 618
        }
    }
}
